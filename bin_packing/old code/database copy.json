{"0.05973223480947489": 
    {"code": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n  \"\"\"Heursitic discovered for the OR datasets.\"\"\"\n  def s(bin, item):\n    if bin - item <= 2:\n      return 4\n    elif (bin - item) <= 3:\n      return 3\n    elif (bin - item) <= 5:\n      return 2\n    elif (bin - item) <= 7:\n      return 1\n    elif (bin - item) <= 9:\n      return 0.9\n    elif (bin - item) <= 12:\n      return 0.95\n    elif (bin - item) <= 15:\n      return 0.97\n    elif (bin - item) <= 18:\n      return 0.98\n    elif (bin - item) <= 20:\n      return 0.98\n    elif (bin - item) <= 21:\n      return 0.98\n    else:\n      return 0.99\n\n  return np.array([s(b, item) for b in bins])", 
        "Intuition": "A heuristic method found by other LLM", "num_item": -1, "parents": ["0.05973223480947489", "0.06591143151390326"]}, 
"0.06591143151390326": 
    {"code": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    return -(bins-item)", 
        "Intuition": "To place each item into the bin that would leave the least amount of empty space after the item is packed. ", "num_item": -1, "parents": ["0.06591143151390326", "0.05973223480947489"]}}
